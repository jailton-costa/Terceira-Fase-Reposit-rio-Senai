import { useState } from 'react';
import '../componentes/Home_StoryCubesDigital.css';

function Home_StoryCubesDigital() {
  const [come√ßarJogo, setCome√ßarJogo] = useState(false);
  const [ultimoJogo, setUltimoJogo] = useState(false);
  const [comoJogar, setComoJogar] = useState(false);
  const [emojis, setEmojis] = useState(["‚ùì", "‚ùì", "‚ùì"]); // Emojis iniciais
  const [ultimoEmojis, setUltimoEmojis] = useState([]); // √öltimos emojis usados
  const [historiaInput, setHistoriaInput] = useState(""); // Texto digitado no input
  const [ultimaHistoria, setUltimaHistoria] = useState(""); // √öltima hist√≥ria salva

  const listaEmojis = [
    "üòÄ", "üòÇ", "üòç", "ü§î", "üòé", "üôÑ", "ü•≥", "üò¥", "üò§", "üò≠", "üò°", "ü§Ø", "üòú", "ü§©", "üòá",
    "üëª", "üíÄ", "ü§ñ", "üëΩ", "üëæ", "üêâ", "ü¶Ñ", "üêô", "ü¶ñ", "üê∫", "üêµ",
    "üöÄ", "‚è≥", "‚ö°", "üí°", "üîë", "üõ∏", "üé©", "üìú", "üí∞", "üß©",
    "üå≤", "üî•", "üåä", "üå™", "üèî", "üåû", "üåï", "üå†", "üçÄ", "ü™≤",
    "üçé", "üçï", "üçî", "üç©", "üçâ", "üç´", "üßÄ", "üçó", "ü•ë", "üçá",
    "üöó", "üö≤", "‚úàÔ∏è", "üöÇ", "üöÅ", "üö¢", "üõ∂", "üèé", "üõµ", "üõª",
    "üßô‚Äç‚ôÇÔ∏è", "üßõ‚Äç‚ôÇÔ∏è", "üßû‚Äç‚ôÇÔ∏è", "üßú‚Äç‚ôÄÔ∏è", "ü¶π‚Äç‚ôÇÔ∏è", "ü¶∏‚Äç‚ôÄÔ∏è", "üëë", "ü¶Ñ", "üîÆ", "üìñ"
  ];

  // Fun√ß√£o para gerar novos emojis aleat√≥rios
  const gerarEmojis = () => {
    const novosEmojis = Array.from({ length: 3 }, () =>
      listaEmojis[Math.floor(Math.random() * listaEmojis.length)]
    );
    setEmojis(novosEmojis);
    setUltimoEmojis(novosEmojis); // Salvar os √∫ltimos emojis gerados
    setUltimaHistoria(historiaInput); // Salvar o texto do input
  };

  return (
    <div className='homeSCD'><br />
      <h1 className='testo'>Seja bem-vindo ao Story Cubes Digital</h1>
      <div className='bts'>
        <button onClick={() => setCome√ßarJogo(!come√ßarJogo)} className='bt'>Come√ßar o jogo</button>
        <button onClick={() => setUltimoJogo(!ultimoJogo)} className='bt'>√öltimo jogo</button>
        <button onClick={() => setComoJogar(!comoJogar)} className='bt'>Como jogar</button>
      </div>

      {come√ßarJogo && (
        <div className='tudoCome√ßarJogo'>
          <div className='modal'>
            <div className='textoCJ'>
              <input
                type="text"
                className='inputC'
                placeholder='Como vai acontecer?'
                value={historiaInput}
                onChange={(e) => setHistoriaInput(e.target.value)}
              />
              <div className="cardsTudo">
                {emojis.map((emoji, index) => (
                  <h1 key={index} className='h1IMG'>{emoji}</h1>
                ))}
              </div>
              <button onClick={gerarEmojis} className='btCARD'>Criar hist√≥ria</button>
              <button onClick={() => setCome√ßarJogo(false)} className='btCARD'>Voltar ao menu</button>
            </div>
          </div>
        </div>
      )}

      {ultimoJogo && (
        <div className="tudoUltimoJogo">
          <div className='modal'>
            <h2 className='h3Card'>√öltimo Jogo</h2>
            <h3 className='textoCard'>Texto digitado: {ultimaHistoria || "Nenhuma hist√≥ria criada ainda."}</h3>
            <div className="cardsTudo">
              {ultimoEmojis.length > 0 ? (
                ultimoEmojis.map((emoji, index) => (
                  <h3 key={index} className='h3IMG'>{emoji}</h3>
                ))
              ) : (
                <p className="textoCard">Nenhum emoji gerado ainda.</p>
              )}
            </div>
            <button onClick={() => setUltimoJogo(false)} className='btCARD'>Voltar ao menu</button>
          </div>
        </div>
      )}

      {comoJogar && (
        <div className="tudoComoJogar">
          <div className='modal'>
            <h2 className='h3Card'>Como jogar Story Cubes Digital</h2><br />
            <h3 className='textoCard'>
              Os Story Cubes digitais s√£o um conjunto de emojis que ajudam a criar hist√≥rias de forma criativa e divertida. O jogo n√£o tem regras fixas e pode ser jogado de diversas maneiras.
            </h3><br />
            <button onClick={() => setComoJogar(false)} className='btCARD'>Voltar ao menu</button>
          </div>
        </div>
      )}
    </div>
  );
}

export default Home_StoryCubesDigital;
